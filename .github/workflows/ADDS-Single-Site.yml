# File: .github/workflows/ADDS-Single-Site.yml
on: [push]
name: ADDS-Single-Site
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      TimeZone: "GMT Standard Time"
      Location: "uksouth"
      namingConvention: "adl"
      VNet1IPOctet1: 10 # i.e. 10.x.x.x
      VNet1IPOctet2: 0  # i.e.  x.0.x.x
      DeploymentDir: "ADDS-Single-Site"
      #AutoShutdownEnabled: "Yes"
      AutoShutdownTime: "2000"
      AutoShutdownEmail: "someone@domain.com"
      adminUsername: ${{ secrets.ADMIN_USERNAME }}
      adminPassword: ${{ secrets.ADMIN_PASSWORD }}
      WindowsServerLicenseType: "Windows_Server"
      vmDC1OSVersion: "2022-Datacenter-azure-edition"
      vmDC1VMSize: "Standard_D2s_v3"
      NetBiosDomain: "E2D"
      SubDNSDomain: ""
      InternalDomainName: "E2D"
      InternalTLD1: "co"
      InternalTLD2: "uk"
      userPassword: ${{ secrets.USER_PASSWORD }}
      artifactsLocation: "https://raw.githubusercontent.com/jonsmith79/AzureDevLab/main/Deployments"
      artifactsLocationSasToken: ""
      hiaFirstname: "Identity"
      hiaSurname: "Administrator"

    steps:
    # Checkout code
    - name: Checkout
      uses: actions/checkout@main

    # Log into Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Create AAD Connect Hybrid Identity Administrator account with Azure CLI
    - name: 'Create Hybrid Identity Administrator account with Azure CLI'
      uses: azure/CLI@v1
      with:
        azcliversion: 2.44.1
        inlineScript: $user = az ad user create --display-name "${{env.hiaFirstname}} ${{env.hiaSurname}}" --password ${{env.adminPassword}} --user-principal-name "${{env.hiaFirstname}}.${{env.hiaSurname}}@${{env.InternalDomainName}}.${{env.InternalTLD1}}.${{env.InternalTLD2}}" --force-change-password-next-login false; az rest --method POST --uri 'https://graph.microsoft.com/beta/roleManagement/directory/roleAssignments' --body '{"principalId":$user.id,"roleDefinitionId":"8ac3fc64-6eca-42ea-9e69-59f4c7b60eb2","directoryScopeId":"/"}'
        
    ## Create AAD Connect Hybrid Identity Administrator identity with Azure CLI
    #- name: Azure CLI script
    #  uses: azure/CLI@v1
    #  with:
    #    azcliversion: 2.44.1        
    #    inlineScript: az rest --method POST --uri 'https://graph.microsoft.com/beta/roleManagement/directory/roleAssignments' --body '{"principalId":$user.id,"roleDefinitionId":"8ac3fc64-6eca-42ea-9e69-59f4c7b60eb2","directoryScopeId":"/"}'

    # Create resource group with Azure CLI
    #- name: Azure CLI script
    #  uses: azure/CLI@v1
    #  with:
    #    scope: subscription
    #    azcliversion: 2.44.1
    #    inlineScript: az group create --name "${{env.namingConvention}}-RG2" --location ${{env.Location}}

    # Deploy Bicep file
    - name: ADDS Single Site - Azure ARM Deployment
      uses: azure/arm-deploy@v1
      with:
        scope: subscription
        subscriptionId: ${{ secrets.AZURE_ADL_SUBID }}
        region: ${{env.Location}}
        template: ./Deployments/${{env.DeploymentDir}}/deploy_ADDS-Single-Site.bicep
        parameters:
          Location="${{env.Location}}"
          namingConvention="${{env.namingConvention}}"
          VNet1IPOctet1="${{env.VNet1IPOctet1}}"
          VNet1IPOctet2="${{env.VNet1IPOctet2}}"
          TimeZone="${{env.TimeZone}}"
          AutoShutdownTime="${{env.AutoShutdownTime}}"
          AutoShutdownEmail="${{env.AutoShutdownEmail}}"
          adminUsername="${{env.adminUsername}}"
          adminPassword="${{env.adminPassword}}"
          WindowsServerLicenseType="${{env.WindowsServerLicenseType}}"
          vmDC1OSVersion="${{env.vmDC1OSVersion}}"
          vmDC1VMSize="${{env.vmDC1VMSize}}"
          NetBiosDomain="${{env.NetBiosDomain}}"
          SubDNSDomain="${{env.SubDNSDomain}}"
          InternalDomainName="${{env.InternalDomainName}}"
          InternalTLD1="${{env.InternalTLD1}}"
          InternalTLD2="${{env.InternalTLD2}}"
          userPassword="${{env.userPassword}}"
          artifactsLocation="${{env.artifactsLocation}}/${{env.DeploymentDir}}/"
          artifactsLocationSasToken="${{env.artifactsLocationSasToken}}"
          #AutoShutdownEnabled="${{env.AutoShutdownEnabled}}"

  